[{"/Users/tahatariq/Projects/RoleChange/clientapp/src/index.tsx":"1","/Users/tahatariq/Projects/RoleChange/clientapp/src/reportWebVitals.ts":"2","/Users/tahatariq/Projects/RoleChange/clientapp/src/App.tsx":"3","/Users/tahatariq/Projects/RoleChange/clientapp/src/api/user-api.tsx":"4"},{"size":500,"mtime":1608749404447,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1608749404449,"results":"7","hashOfConfig":"6"},{"size":2565,"mtime":1609111109219,"results":"8","hashOfConfig":"6"},{"size":1065,"mtime":1609111092562,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1hsxk20",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tahatariq/Projects/RoleChange/clientapp/src/index.tsx",[],["20","21"],"/Users/tahatariq/Projects/RoleChange/clientapp/src/reportWebVitals.ts",[],"/Users/tahatariq/Projects/RoleChange/clientapp/src/App.tsx",["22","23","24","25","26","27"],"import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as signalR from \"@microsoft/signalr\";\nimport Async from \"react-async\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Alert } from 'react-bootstrap';\nimport { loadUsers, editUser } from './api/user-api';\nimport { UserType } from './types';\n\nconst roles = [\n  \"1\", \"2\", \"3\"\n]\nconst App = () => {\n\n  const hubConnection = new signalR.HubConnectionBuilder().\n    withUrl(\"/roleChangeHub\").build();\n  try {\n    hubConnection.start();\n  } catch (err) {\n    console.log(err);\n  }\n  interface SignalR {\n    connect: signalR.HubConnection\n  }\n\n  const Messages = (messageProps: SignalR) => {\n    const [list, setList] = useState<string[]>([]);\n    useEffect(() => {\n      messageProps.connect.on(\"sendToReact\", message => {\n        setList(oldArray => [...oldArray, message]);\n      });\n    }, [])\n    return (\n      <>\n        {list.map((message, index) =>\n          <Alert variant=\"success\" key={`message${index}`}>{message}</Alert>\n        )}\n      </>\n    )\n  }\n\n  const UserList = (userProps: SignalR) => {\n\n    const [users, setUsers] = useState<UserType[]>([]);\n\n    useEffect(() => {\n      if (users.length === 0) {\n        getUsers();\n      }\n    }, []);\n\n    const getUsers = async () => {\n      const users = await loadUsers();\n      //console.log(users);\n      setUsers(users);\n    };\n    useEffect(() => {\n      \n      userProps.connect.on(\"UpdateUsers\", users => {\n        console.log(users);\n        setUsers(users);\n      });\n    }, [])\n\n    return (\n      <>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Role</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {users.map((user: UserType, idx) =>\n\n              <tr key={user.id}>\n\n                <td >{user.id}</td>\n                <td>{user.name}</td>\n                <td><select value={user.role} onChange={(e) => {\n                  user.role = e.target.value;\n                  editUser(user);\n                }}>{\n                    roles.map((role, index) =>\n                      <option key={user.id + index} value={role} >{role}</option>\n\n                    )\n                  }\n                </select></td>\n              </tr>\n            )}\n\n          </tbody>\n        </Table>\n      </>)\n  }\n\n\n  return (\n  <>\n    <UserList connect={hubConnection} />\n\n    <Messages connect={hubConnection}></Messages>\n  </>\n  )\n}\n\n\n\n\nexport default App;\n","/Users/tahatariq/Projects/RoleChange/clientapp/src/api/user-api.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":16,"column":59,"nodeType":"39","messageId":"40","endLine":16,"endColumn":60,"fix":"41"},{"ruleId":"42","severity":1,"message":"43","line":33,"column":8,"nodeType":"44","endLine":33,"endColumn":10,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":51,"column":8,"nodeType":"44","endLine":51,"endColumn":10,"suggestions":"47"},{"ruleId":"42","severity":1,"message":"48","line":64,"column":8,"nodeType":"44","endLine":64,"endColumn":10,"suggestions":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Async' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"52","text":"53"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'messageProps.connect'. Either include it or remove the dependency array.","ArrayExpression",["54"],"React Hook useEffect has a missing dependency: 'users.length'. Either include it or remove the dependency array.",["55"],"React Hook useEffect has a missing dependency: 'userProps.connect'. Either include it or remove the dependency array.",["56"],"no-global-assign","no-unsafe-negation",[481,487],"\n    .",{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [messageProps.connect]",{"range":"63","text":"64"},"Update the dependencies array to be: [users.length]",{"range":"65","text":"66"},"Update the dependencies array to be: [userProps.connect]",{"range":"67","text":"68"},[913,915],"[messageProps.connect]",[1278,1280],"[users.length]",[1568,1570],"[userProps.connect]"]